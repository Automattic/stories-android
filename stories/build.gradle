plugins {
    id "com.android.library"
    id "org.jetbrains.kotlin.android"
    id "org.jetbrains.kotlin.kapt"
    id "org.jetbrains.kotlin.plugin.serialization"
    id "org.jetbrains.kotlin.plugin.parcelize"
    id "com.automattic.android.publish-to-s3"
}

apply from: "../stories-common.gradle"

android {
    compileSdkVersion rootProject.compileSdkVersion


    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        consumerProguardFiles 'consumer-rules.pro'
    }

    viewBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions{
        lintConfig file("${project.rootDir}/lint.xml")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serializationVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$gradle.ext.kotlinVersion"

    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.core:core-ktx:$coreVersion"

    implementation "androidx.navigation:navigation-fragment-ktx:$navComponentVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navComponentVersion"
    implementation 'androidx.emoji:emoji:1.0.0'
    implementation "androidx.recyclerview:recyclerview:1.1.0"

    implementation 'com.google.android.material:material:1.2.1'

    implementation 'com.github.bumptech.glide:glide:4.10.0'
    kapt 'com.github.bumptech.glide:compiler:4.10.0'

    implementation 'jp.wasabeef:glide-transformations:4.3.0'

    implementation 'org.greenrobot:eventbus:3.3.1'

    implementation photoEditorProjectDependency

    // lifecycle
    implementation "androidx.lifecycle:lifecycle-common-java8:$androidxLifecycleVersion"
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidxLifecycleVersion"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidxLifecycleVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinxCoroutinesVersion"

    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    lintChecks 'org.wordpress:lint:1.1.0'

    testImplementation 'junit:junit:4.13.2'
}

// Add properties named "loop.xxx" to our BuildConfig
android.buildTypes.all { buildType ->
    def inputFile = file("${rootDir}/gradle.properties")
    def properties = loadGradleProperties(inputFile)
    properties.any { property ->
        if (property.key.toLowerCase().startsWith("wp.stories.use.")) {
            buildType.buildConfigField "boolean", property.key.replace("wp.stories.", "").replace(".", "_").toUpperCase(), "${property.value}"
        }
        else if (property.key.toLowerCase().startsWith("wp.stories.")) {
            buildType.buildConfigField "String", property.key.replace("wp.stories.", "").replace(".", "_").toUpperCase(), "\"${property.value}\""
        }
        else if (property.key.toLowerCase().startsWith("wp.stories.res.")) {
            buildType.resValue "string", property.key.replace("wp.stories.res.", "").replace(".", "_").toLowerCase(), "${property.value}"
        }
    }

    if (properties.getProperty("wp.stories.use.cameraX") == null) {
        // use cameraX implementation by default if no gradle.properties set
        buildType.buildConfigField "boolean", "USE_CAMERAX", "true"
    }
}

project.afterEvaluate {
    publishing {
        publications {
            StoriesPublication(MavenPublication) {
                from components.release

                groupId "com.automattic"
                artifactId "stories"
                artifact tasks.named("androidSourcesJar") // This task is added by 'publish-to-s3' plugin
                // version is set by 'publish-to-s3' plugin
            }
        }
   }
}
