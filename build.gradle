plugins {
    id "com.android.application" apply false
    id "org.jetbrains.kotlin.android" apply false
    id "org.jetbrains.kotlin.plugin.serialization"
    id "io.sentry.android.gradle"

    id "com.automattic.android.configure"
}

allprojects {
    apply plugin: 'checkstyle'

    repositories {
        maven {
            url "https://a8c-libs.s3.amazonaws.com/android"
            content {
                includeGroup "com.automattic"
                includeGroup "com.automattic.stories"
                includeGroup "org.wordpress"
            }
        }
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }

    if (tasks.findByPath('checkstyle') == null) {
        tasks.create(name: 'checkstyle', type: Checkstyle) {
            source 'src'
            include '**/*.java'
            include '**/*.kt'
            exclude '**/gen/**'

            classpath = files()
        }

        checkstyle {
            toolVersion = '8.3'
            configFile file("${project.rootDir}/config/checkstyle.xml")
        }
    }
}

subprojects {
    configurations {
        ktlint
    }

    dependencies {
        ktlint 'com.github.shyiko:ktlint:0.31.0'
    }

    if (tasks.findByPath('ktlint') == null) {
        tasks.create(name: 'ktlint', type: JavaExec) {
            main = "com.github.shyiko.ktlint.Main"
            classpath = configurations.ktlint
            args "src/**/*.kt"
        }
    }

    if (tasks.findByPath('ktlintFormat') == null) {
        tasks.create(name: 'ktlintFormat', type: JavaExec) {
            main = "com.github.shyiko.ktlint.Main"
            classpath = configurations.ktlint
            args "-F", "src/**/*.kt"
        }
    }

    if (tasks.findByPath('ciktlint') == null) {
        tasks.create(name: 'ciktlint', type: JavaExec) {
            main = "com.github.shyiko.ktlint.Main"
            classpath = configurations.ktlint
            args "src/**/*.kt", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
        }
    }
}

ext {
    minSdkVersion = 24
    compileSdkVersion = 33
    targetSdkVersion = 33
}

ext {
    androidxConstraintlayoutVersion = '1.1.3'
    androidxLifecycleVersion = '2.2.0'
    kotlinxCoroutinesVersion = '1.3.9'
    appCompatVersion = '1.0.2'
    coreVersion = '1.2.0'
    navComponentVersion = '2.0.0'
    serializationVersion = '1.0-M1-1.4.0-rc'

    mp4composeProjectDependency = project.hasProperty("mp4composeVersion") ? "com.automattic.stories:mp4compose:${project.getProperty("mp4composeVersion")}" : project(":mp4compose")
    photoEditorProjectDependency = project.hasProperty("photoEditorVersion") ? "com.automattic.stories:photoeditor:${project.getProperty("photoEditorVersion")}" : project(":photoeditor")
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
