// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlinVersion = '1.4.20'
    ext.serializationVersion = '1.0-M1-1.4.0-rc'
    repositories {
        maven {
            url 'https://a8c-libs.s3.amazonaws.com/android' 
            content {
                includeGroup "com.automattic.android"
            }
        }
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion"
        classpath 'com.automattic.android:fetchstyle:1.1'
        classpath 'io.sentry:sentry-android-gradle-plugin:2.0.0'
        classpath 'com.automattic.android:configure:0.6.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply plugin: 'com.automattic.android.fetchstyle'
apply plugin: 'com.automattic.android.configure'

allprojects {
    apply plugin: 'checkstyle'

    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }

    if (tasks.findByPath('checkstyle') == null) {
        tasks.create(name: 'checkstyle', type: Checkstyle) {
            source 'src'
            include '**/*.java'
            include '**/*.kt'
            exclude '**/gen/**'

            classpath = files()
        }

        checkstyle {
            toolVersion = '8.3'
            configFile file("${project.rootDir}/config/checkstyle.xml")
        }
    }
}

subprojects {
    configurations {
        ktlint
    }

    dependencies {
        ktlint 'com.github.shyiko:ktlint:0.31.0'
    }

    if (tasks.findByPath('ktlint') == null) {
        tasks.create(name: 'ktlint', type: JavaExec) {
            main = "com.github.shyiko.ktlint.Main"
            classpath = configurations.ktlint
            args "src/**/*.kt"
        }
    }

    if (tasks.findByPath('ktlintFormat') == null) {
        tasks.create(name: 'ktlintFormat', type: JavaExec) {
            main = "com.github.shyiko.ktlint.Main"
            classpath = configurations.ktlint
            args "-F", "src/**/*.kt"
        }
    }

    if (tasks.findByPath('ciktlint') == null) {
        tasks.create(name: 'ciktlint', type: JavaExec) {
            main = "com.github.shyiko.ktlint.Main"
            classpath = configurations.ktlint
            args "src/**/*.kt", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
        }
    }
}

ext {
    compileSdkVersion = 28
    buildToolVersion = '28.0.3'

    minSdkVersion = 21
    targetSdkVersion = 28

    lifecycleVersion = '2.2.0'
    coroutinesVersion = '1.3.9'
    constraintLayoutVersion = '1.1.3'
    appCompatVersion = '1.0.2'
    coreVersion = '1.2.0'
    navComponentVersion = '2.0.0'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
