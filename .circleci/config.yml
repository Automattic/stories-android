version: 2.1

orbs:
  # Using 1.0 of the Orbs means it will use the latest 1.0.x version from https://github.com/wordpress-mobile/circleci-orbs
  android: wordpress-mobile/android@1.0
  git: wordpress-mobile/git@1.0
  slack: circleci/slack@3.4.2

commands:
  copy-gradle-properties:
    steps:
      - run:
          name: Setup gradle.properties
          command: cp gradle.properties-example gradle.properties

jobs:
  Lint:
    executor: 
      name: android/default
      api-version: "29"
    steps:
      - checkout
      - android/restore-gradle-cache
      - copy-gradle-properties
      - run:
          name: Checkstyle
          command: ./gradlew --stacktrace checkstyle
      - run:
          name: ktlint
          command: ./gradlew --stacktrace ciktlint
      - run:
          name: Lint
          command: |
            ./gradlew --stacktrace lintRelease || (grep -A20 -B2 'severity="Error"' */build/**/*.xml; exit 1);
      - android/save-gradle-cache
      - android/save-lint-results
  Unit Tests:
    executor: 
      name: android/default
      api-version: "29"
    steps:
      - checkout
      - android/restore-gradle-cache
      - copy-gradle-properties
      - run:
          name: Unit tests
          command: ./gradlew --stacktrace -PtestsMaxHeapSize=1536m testRelease
      - android/save-gradle-cache
      - android/save-test-results
  Installable Build:
    executor: 
      name: android/default
      api-version: "29"
    steps:
      - checkout
      - run:
          name: Apply Configuration
          command: ./gradlew applyConfiguration
      - android/restore-gradle-cache
      - run:
          name: Build APK
          command: |
            if [ -n "$CIRCLE_PULL_REQUEST" ]; then
              PR_NUMBER=$(basename $CIRCLE_PULL_REQUEST)
              PREFIX="pr-${PR_NUMBER}"
            else
              PREFIX="$CIRCLE_BRANCH"
            fi
            VERSION_NAME="${PREFIX}-build-${CIRCLE_BUILD_NUM}"
            echo "export VERSION_NAME=$VERSION_NAME" >> $BASH_ENV

            ./gradlew --stacktrace app:assembleRelease -PversionName="$VERSION_NAME"
      - android/save-gradle-cache
      - run:
          name: Prepare APK
          command: |
            mkdir -p Artifacts
            mv app/build/outputs/apk/release/app-release.apk "Artifacts/Loop-${VERSION_NAME}.apk"
      - store_artifacts:
          path: Artifacts
          destination: Artifacts

workflows:
  loop:
    jobs:
      - Lint
      - Unit Tests
      - Installable Build
