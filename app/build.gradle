apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.sentry.android.gradle'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.automattic.portkey"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 11
        // Allow versionName to be overridden with property. e.g. -PversionName=1234
        if (project.hasProperty("versionName")) {
            versionName project.property("versionName")
        } else {
            versionName "1.0.0.13-camerax"
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
        lintConfig file('lint.xml')
    }

    useLibrary 'android.test.runner'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.2.2'
    implementation 'androidx.emoji:emoji:1.0.0'
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation "androidx.recyclerview:recyclerview:1.1.0"

    implementation 'com.google.android.material:material:1.1.0'

    implementation 'com.github.bumptech.glide:glide:4.10.0'
    kapt 'com.github.bumptech.glide:compiler:4.10.0'

    implementation 'org.greenrobot:eventbus:3.1.1'

    implementation 'io.sentry:sentry-android:1.7.27'
    // this dependency is not required if you are already using your own
    // slf4j implementation
    implementation 'org.slf4j:slf4j-nop:1.7.25'

    implementation project(path: ':photoeditor')
    implementation project(path: ':stories')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5'
}

android.buildTypes.all { buildType ->
    // Add properties named "portkey.xxx" to our BuildConfig
    def inputFile = checkGradlePropertiesFile()
    def properties = loadPropertiesFromFile(inputFile)
    properties.any { property ->
    if (property.key.toLowerCase().startsWith("portkey.")) {
            buildType.buildConfigField "String", property.key.replace("portkey.", "").replace(".", "_").toUpperCase(),
                    "\"${property.value}\""
        }
        else if (property.key.toLowerCase().startsWith("sentry.dsn")) {
            buildType.buildConfigField "String", property.key.replace(".", "_").toUpperCase(),
                    "\"${property.value}\""
        }
        else if (property.key.toLowerCase().startsWith("portkey.res.")) {
            buildType.resValue "string", property.key.replace("portkey.res.", "").replace(".", "_").toLowerCase(),
                    "${property.value}"
        }
    }
}

def checkGradlePropertiesFile() {
    def inputFile = file("${rootDir}/gradle.properties")
    if (!inputFile.exists()) {
        throw new StopActionException("Build configuration file gradle.properties doesn't exist, follow README instructions")
    }
    return inputFile
}

static def loadPropertiesFromFile(inputFile) {
    def properties = new Properties()
    inputFile.withInputStream { stream ->
        properties.load(stream)
    }
    return properties
}

// For app signing
if (["storeFile", "storePassword", "keyAlias", "keyPassword"].count { !project.hasProperty(it) } == 0) {
    android {
        signingConfigs {
            release {
                storeFile = rootProject.file(project.storeFile)
                storePassword = project.storePassword
                keyAlias = project.keyAlias
                keyPassword = project.keyPassword
            }
        }
    }
    android.buildTypes.release.signingConfig = android.signingConfigs.release
}
